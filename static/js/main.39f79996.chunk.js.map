{"version":3,"sources":["components/navbar/Navbar.jsx","components/ship/shipCardStyles.js","components/ship/ShipCard.jsx","components/spinner/Spinner.jsx","App.jsx","serviceWorker.js","index.jsx","components/spinner/spinner.module.css"],"names":["Navbar","useStyles","makeStyles","theme","shipContainer","display","flexGrow","justifyContent","alignItems","paper","flexDirection","width","height","overflow","margin","padding","spacing","comparisonPaper","loading","compLoad","typography","textAlign","btn","position","ShipCard","classes","useState","compLoading","state","setState","cost_in_credits","undefined","hyperdrive_rating","leftShip","setLeftShip","rightShip","setRightShip","useEffect","setTimeout","randomShip","nextRandomShip","a","fetch","response","json","console","log","nextRandom","episodeFiveShips","Math","floor","random","length","fetchLeftShip","catch","error","Error","fetchRightShip","className","Paper","elevation","Typography","gutterBottom","variant","Skeleton","animation","name","model","Number","Button","color","onClick","e","preventDefault","compareHandler","Spinner","styles","loader","cx","inner","one","two","three","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.39f79996.chunk.js","sourcesContent":["import React from 'react';\nimport './navbar.module.css';\n\nconst Navbar = () => {\n  return (\n    <header>\n      <h1>\n        Star Ships Ultimate Comparison\n      </h1>\n    </header>\n  );\n};\n\nexport default Navbar;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  shipContainer: {\n    display: 'flex',\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '24vw',\n    height: '28vh',\n    overflow: 'hidden',\n    margin: '1rem',\n    justifyContent: 'center',\n    padding: theme.spacing(1),\n    alignItems: 'center',\n  },\n  comparisonPaper: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '12vw',\n    height: '18vh',\n    overflow: 'hidden',\n    justifyContent: 'center',\n    padding: theme.spacing(2),\n    alignItems: 'center',\n  },\n  loading: {\n    width: '16rem',\n  },\n  compLoad: {\n    width: '16rem',\n    height: '4rem',\n  },\n  typography: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n  },\n  btn: {\n    position: 'absolute',\n    margin: '8vh auto',\n  },\n  // image: {\n  //   width: 128,\n  //   height: 128,\n  // },\n  // img: {\n  //   margin: 'auto',\n  //   display: 'block',\n  //   maxWidth: '100%',\n  //   maxHeight: '100%',\n  // },\n}));\n\nexport default useStyles;\n","import React, { useState, useEffect } from 'react';\nimport { Paper, Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport useStyles from './shipCardStyles';\n\nexport default function ShipCard() {\n  const classes = useStyles();\n\n  const [state, setState] = useState({\n    loading: true,\n    compLoading: true,\n  });\n\n  const [leftShip, setLeftShip] = useState({\n    cost_in_credits: undefined,\n    hyperdrive_rating: undefined,\n  });\n  const [rightShip, setRightShip] = useState({\n    cost_in_credits: undefined,\n    hyperdrive_rating: undefined,\n  });\n\n  useEffect(() => {\n    setTimeout(() => {\n      setState({\n        ...state,\n        loading: false,\n      });\n    }, 3000);\n  }, []);\n\n  useEffect(() => {\n    let randomShip;\n    let nextRandomShip;\n\n    (function nextRandom() {\n      const episodeFiveShips = [3, 10, 11, 12, 15, 17, 21, 22, 23];\n      randomShip = episodeFiveShips[Math.floor(Math.random() * episodeFiveShips.length)];\n      nextRandomShip = episodeFiveShips[Math.floor(Math.random() * episodeFiveShips.length)];\n      return (randomShip === nextRandomShip) ? nextRandom() : randomShip;\n    }());\n\n    async function fetchLeftShip() {\n      let response = await fetch(`${randomShip}`);\n      response = await response.json();\n      console.log(randomShip);\n      await setLeftShip(response);\n    }\n    async function fetchRightShip() {\n      let response = await fetch(`${nextRandomShip}`);\n      response = await response.json();\n      console.log(nextRandomShip);\n      await setRightShip(response);\n    }\n\n    fetchLeftShip().catch((error) => Error(error));\n    fetchRightShip().catch((error) => Error(error));\n  }, []);\n\n  const compareHandler = (e) => {\n    e.preventDefault();\n    return setState({\n      ...state, compLoading: false,\n    });\n  };\n\n  const { loading, compLoading } = state;\n\n  return (\n    <div className={classes.shipContainer}>\n      <Paper elevation={3} className={classes.paper}>\n        <Typography className={classes.typography} gutterBottom variant=\"h4\">\n          {loading ? <Skeleton animation=\"wave\" className={classes.loading} /> : leftShip.name }\n        </Typography>\n        <Typography className={classes.typography} gutterBottom variant=\"h6\">\n          {loading ? <Skeleton animation=\"wave\" className={classes.loading} /> : leftShip.model }\n        </Typography>\n        {loading ? <Skeleton animation=\"wave\" className={classes.loading} />\n          : <Typography gutterBottom variant=\"body1\">cost: {leftShip.cost_in_credits}</Typography> }\n      </Paper>\n\n      <Paper elevation={3} className={classes.comparisonPaper}>\n        {\n          (compLoading)\n            ? (<Skeleton animation=\"pulse\" className={classes.compLoad} />)\n            : (Number(leftShip.cost_in_credits) < Number(rightShip.cost_in_credits)\n            || (leftShip.cost_in_credits === 'unknown'\n            && rightShip.cost_in_credits !== 'unknown'))\n              ? <Typography gutterBottom variant=\"body1\">{rightShip.name} cost is higher</Typography>\n              : <Typography gutterBottom variant=\"body1\">{leftShip.name} cost is higher</Typography>\n        }\n      <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              className={classes.btn}\n              onClick={(e) => compareHandler(e)}>compare</Button>\n      </Paper>\n\n      <Paper elevation={3} className={classes.paper}>\n        <Typography className={classes.typography} gutterBottom variant=\"h4\">\n          {loading ? <Skeleton animation=\"wave\" className={classes.loading} /> : rightShip.name }\n        </Typography>\n        <Typography className={classes.typography} gutterBottom variant=\"h6\">\n          {loading ? <Skeleton animation=\"wave\" className={classes.loading} /> : rightShip.model }\n        </Typography>\n        {loading ? <Skeleton animation=\"wave\" className={classes.loading} />\n          : <Typography gutterBottom variant=\"body1\">cost: {rightShip.cost_in_credits}</Typography> }\n      </Paper>\n    </div>\n  );\n}\n","import React from 'react';\nimport cx from 'classnames';\nimport styles from './spinner.module.css';\n\nconst Spinner = () => (\n  <div className={styles.loader}>\n    <div className={ cx(styles.inner, styles.one)}/>\n    <div className={ cx(styles.inner, styles.two)}/>\n    <div className={ cx(styles.inner, styles.three)}/>\n  </div>\n);\n\nexport default Spinner;\n","import React from 'react';\nimport Navbar from './components/navbar/Navbar.jsx';\nimport ShipCard from './components/ship/ShipCard.jsx';\nimport Spinner from './components/spinner/Spinner.jsx';\n\nfunction App() {\n  return (\n      <div>\n        <Navbar />\n        <Spinner />\n        <ShipCard />\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"spinner_loader__3zq4M\",\"inner\":\"spinner_inner__3IOKC\",\"one\":\"spinner_one__2oMTl\",\"rotate-one\":\"spinner_rotate-one__srt19\",\"two\":\"spinner_two__1eNhT\",\"rotate-two\":\"spinner_rotate-two__2I2cS\",\"three\":\"spinner_three__1j29u\",\"rotate-three\":\"spinner_rotate-three__1jAAM\"};"],"sourceRoot":""}